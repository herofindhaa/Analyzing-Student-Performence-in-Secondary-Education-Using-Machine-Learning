import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline

def load_data(file_path):
    return pd.read_csv(file_path)

def preprocess_data(data):
    # Define features and target variable
    X = data.drop('final_grade', axis=1)
    y = data['final_grade']
    
    # Preprocessing for numerical and categorical features
    numeric_features = ['age', 'study_time', 'previous_grades', 'family_income', 'attendance']
    categorical_features = ['gender']
    
    numeric_transformer = StandardScaler()
    categorical_transformer = OneHotEncoder()
    
    preprocessor = ColumnTransformer(
        transformers=[
            ('num', numeric_transformer, numeric_features),
            ('cat', categorical_transformer, categorical_features)
        ])
    
    X_processed = preprocessor.fit_transform(X)
    
    return train_test_split(X_processed, y, test_size=0.2, random_state=42)

if __name__ == '__main__':
    data = load_data('../data/student_data.csv')
    X_train, X_test, y_train, y_test = preprocess_data(data)
